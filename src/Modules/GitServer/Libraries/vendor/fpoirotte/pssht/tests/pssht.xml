<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <imports>
        <import resource="../pssht.xml"/>
    </imports>

    <parameters>
        <!--
            Listen on localhost only,
            using whatever port the OS gives us.
        -->
        <parameter key="listen">127.0.0.1:0</parameter>

        <!--
            Similar to EchoService, but only accepts "Exec" requests
            that contain a single number.
            A message containing that number will be sent back
            and it will also be used as the request's exit code.
        -->
        <parameter key="application">\fpoirotte\Pssht\Application\TestService</parameter>

        <!-- Disable the banner. -->
        <parameter key="banner"/>

        <!--
            Disable password & host based authentication.
            Only public key authentication using any of the test keys
            will be accepted.
        -->
        <parameter key="auth.pubkeys" type="collection">
            <parameter key="%USER%" type="collection">
                <parameter>file://%pssht.base_dir%/tests/data/plaintext/ssh-dss/1024.pub</parameter>
                <parameter>file://%pssht.base_dir%/tests/data/plaintext/ssh-rsa/1024.pub</parameter>
                <parameter>file://%pssht.base_dir%/tests/data/plaintext/ssh-rsa/2048.pub</parameter>
                <parameter>file://%pssht.base_dir%/tests/data/plaintext/ssh-rsa/4096.pub</parameter>
                <parameter>file://%pssht.base_dir%/tests/data/plaintext/ssh-rsa/8192.pub</parameter>
                <parameter>file://%pssht.base_dir%/tests/data/plaintext/ssh-rsa/16384.pub</parameter>
                <parameter>file://%pssht.base_dir%/tests/data/plaintext/ecdsa-sha2-nistp256/256.pub</parameter>
                <parameter>file://%pssht.base_dir%/tests/data/plaintext/ecdsa-sha2-nistp384/384.pub</parameter>
                <parameter>file://%pssht.base_dir%/tests/data/plaintext/ecdsa-sha2-nistp521/521.pub</parameter>
                <parameter>file://%pssht.base_dir%/tests/data/plaintext/ssh-ed25519/256.pub</parameter>
            </parameter>
        </parameter>
        <parameter key="auth.passwords" type="collection"/>
        <parameter key="auth.hostbased" type="collection"/>
    </parameters>

    <services>
        <!--
            - Change log formatting to use a simpler format.
            - Only log events with a level of INFO or higher.
        -->
        <service id="logging">
            <factory class="\Plop\Plop" method="getInstance"/>
            <call method="addLogger">
                <argument type="service">
                    <service class="\Plop\Logger">
                        <argument type="constant">null</argument>
                        <argument type="constant">null</argument>
                        <argument type="constant">null</argument>
                        <argument type="service">
                            <service class="\Plop\HandlersCollection">
                                <call method="offsetSet">
                                    <argument type="constant">null</argument>
                                    <argument type="service">
                                        <service class="\Plop\Handler\Stream">
                                            <argument type="constant">STDOUT</argument>
                                            <call method="setFormatter">
                                                <argument type="service">
                                                    <service class="\Plop\Formatter">
                                                        <argument>SERVER: %%(message)s</argument>
                                                        <argument></argument>
                                                    </service>
                                                </argument>
                                            </call>
                                        </service>
                                    </argument>
                                </call>
                            </service>
                        </argument>
                        <call method="setLevel">
                            <argument>INFO</argument>
                        </call>
                    </service>
                </argument>
            </call>
        </service>
    </services>
</container>
