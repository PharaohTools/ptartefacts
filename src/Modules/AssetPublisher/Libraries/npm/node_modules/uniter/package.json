{
  "version": "1.6.1",
  "name": "uniter",
  "publishConfig": {
    "proprietary-attribs": false
  },
  "description": "Uniter - PHP in the browser and Node.js",
  "keywords": [
    "javascript",
    "php",
    "recompiler",
    "interpreter"
  ],
  "config": {
    "publishtest": false
  },
  "homepage": "http://asmblah.github.com/uniter/",
  "author": {
    "name": "Daniel Phillimore",
    "email": "dan@ovms.co",
    "url": "http://ovms.co"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/asmblah/uniter"
  },
  "bugs": {
    "url": "http://github.com/asmblah/uniter/issues",
    "email": "dan@ovms.co"
  },
  "main": "index",
  "bin": {
    "uniter": "bin/uniter"
  },
  "scripts": {
    "build": "mkdir -p ./dist && browserify --standalone=uniter index | uglifyjs --mangle > ./dist/uniter.js",
    "build-demo": "npm run build && mkdir -p ./dist/demo && browserify demo/interactive-main > ./dist/demo/interactive.js",
    "jshint": "jshint .",
    "mocha": "mocha --recursive tests/bdd/integration/",
    "test": "npm run jshint && npm run mocha"
  },
  "dependencies": {
    "escodegen": "^1.6.1",
    "esprima": "^2.2.0",
    "estraverse": "^4.0.0",
    "microdash": "~1",
    "node-getopt": "0.2.x",
    "pausable": "~3.1",
    "phpcommon": "~1.3",
    "phpruntime": "~2.7",
    "phptoast": "~2.2",
    "phptojs": "~1.4",
    "uglify-js": "^2.4.23"
  },
  "devDependencies": {
    "browserify": "^9.0.8",
    "chai": "^2.3.0",
    "express": "3.2.x",
    "glob": "^5.0.5",
    "jshint": "^2.8.0",
    "mocha": "^2.2.5",
    "nowdoc": "^1.0.0",
    "sinon": "~1.15",
    "sinon-chai": "^2.7.0"
  },
  "engines": {
    "node": ">=0.6"
  },
  "license": "MIT",
  "readme": "Uniter\n======\n\n[![Build Status](https://secure.travis-ci.org/asmblah/uniter.png?branch=master)](http://travis-ci.org/asmblah/uniter)\n\nRun PHP client-side in the browser or in Node.js.\n\n[\n![Manipulating the DOM using PHP with Uniter](https://asmblah.github.io/uniter/img/uniter_dom_demo.gif)\n](https://asmblah.github.io/uniter/demo/interactive.html)\n\n[Try it now](https://asmblah.github.io/uniter/demo/interactive.html)\n\nDemos\n-----\n- [jQuery + PHP + Browserify (with PHPUnit)](https://uniter.github.io/uniter-jquery)\n- [Interactive demo (above)](https://asmblah.github.io/uniter/demo/interactive.html)\n\nGetting started\n---------------\n```shell\n$ npm install uniter\n$ node\n```\n```javascript\n> var php = require('uniter').createEngine('PHP');\n> php.getStdout().on('data', function (text) { console.log(text); });\n> php.execute('<?php print \"Hello from PHP!\";');\nHello from PHP!\n```\n\nFeatures\n--------\n- Environment-agnostic architecture: should run in any modern browser (IE < 9 support coming soon) and Node.js\n\n- PHP statements, constructs and operators:\n    - `if`, `else` and `else if` statements\n    - `while` loop support\n    - `for` loop support\n    - `foreach` loop support\n    - `function` statements with type hinting (as syntactic sugar only: no enforcement is performed yet)\n    - Closure `function` expressions\n    - `switch` statements\n    - Forward and backward `goto` statements (but no overlap support yet)\n    - `class` object support (`new` operator, `extends` support etc.)\n    - Instance property/method access (`->` operator)\n    - Static class property/method access (`::` operator), `self::` construct\n    - `use` statement for `class`, `namespace` and `function` importing and aliasing\n    - Magic `__autoload(...)` function\n    - Magic `__DIR__`, `__FILE__` and `__LINE__` constants\n    - Ternary operator\n    - Loose equality `==` and inequality `!=` comparison operators\n    - Strict equality `===` and inequality `!==` comparison operators\n\n    And others... see [the `Engine` integration tests](https://github.com/asmblah/uniter/tree/master/tests/bdd/integration/languages/PHP/engine) for more info.\n\nUsing on the command line\n-------------------------\nYou can use Uniter from the command line after installing it via NPM, eg.:\n\n```sh\n# Install Uniter globally\n$ npm install -g uniter\n\n# Execute PHP code\n$ uniter -r 'echo 7 + 2;'\n9\n\n# Parse PHP but just dump the AST as JSON, don't attempt to execute\n$ uniter -r 'echo 7 + 2;' --dump-ast\n{\n    \"statements\": [\n        {\n            \"expression\": {\n                \"left\": {\n                    \"number\": \"7\",\n                    \"name\": \"N_INTEGER\"\n                },\n                \"right\": [\n                    {\n                        \"operator\": \"+\",\n                        \"operand\": {\n                            \"number\": \"2\",\n                            \"name\": \"N_INTEGER\"\n                        }\n                    }\n                ],\n                \"name\": \"N_EXPRESSION\"\n            },\n            \"name\": \"N_ECHO_STATEMENT\"\n        }\n    ],\n    \"name\": \"N_PROGRAM\"\n}\n```\n\nKeeping up to date\n------------------\n- [Follow me on Twitter](https://twitter.com/@asmblah) for updates: [https://twitter.com/@asmblah](https://twitter.com/@asmblah)\n\nRunning the tests\n-----------------\n\nThere are two supported ways of running the Mocha test suite:\n\n1. Run the tests in Node.js from the command line:\n\n        cd uniter/\n        npm test\n\n2. Run the tests in a browser by starting a Node.js server:\n\n        npm run-script webtest\n\n   You should then be able to run the tests by visiting http://127.0.0.1:6700 in a supported web browser.\n",
  "readmeFilename": "README.md",
  "_id": "uniter@1.6.1",
  "dist": {
    "shasum": "8c83618150d422dc5d61bc276af4889080edc9e1"
  },
  "_from": "uniter@^1.0",
  "_resolved": "https://registry.npmjs.org/uniter/-/uniter-1.6.1.tgz"
}
