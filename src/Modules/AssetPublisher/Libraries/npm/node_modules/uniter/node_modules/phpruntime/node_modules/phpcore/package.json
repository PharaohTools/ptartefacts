{
  "version": "1.4.3",
  "name": "phpcore",
  "description": "Minimal PHP core library for PHP environments",
  "keywords": [
    "php",
    "runtime"
  ],
  "homepage": "https://github.com/uniter/phpcore",
  "author": {
    "name": "Dan Phillimore",
    "email": "dan@ovms.co",
    "url": "http://ovms.co"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/uniter/phpcore"
  },
  "bugs": {
    "url": "http://github.com/uniter/phpcore/issues",
    "email": "dan@ovms.co"
  },
  "main": "index",
  "scripts": {
    "jshint": "jshint .",
    "mocha": "mocha -r test/harness --recursive test/integration/ test/unit/",
    "test": "npm run jshint && npm run mocha"
  },
  "dependencies": {
    "bluebird": "^2.9.34",
    "microdash": "~1",
    "pausable": "~3.1",
    "pauser": "~1",
    "phpcommon": "~1.3"
  },
  "devDependencies": {
    "chai": "^2.3.0",
    "chai-as-promised": "^5.1.0",
    "jshint": "^2.8.0",
    "mocha": "^2.3.3",
    "nowdoc": "^1.0.0",
    "phptoast": "~2.2",
    "phptojs": "~1.4",
    "sinon": "~1.15",
    "sinon-chai": "^2.7.0"
  },
  "engines": {
    "node": ">=0.6"
  },
  "license": "MIT",
  "readme": "PHPCore\n=======\n\n[![Build Status](https://secure.travis-ci.org/uniter/phpcore.png?branch=master)](http://travis-ci.org/uniter/phpcore)\n\nMinimal PHP core library for PHP environments.\n\nWho would use this?\n-------------------\nAfter getting started with [Uniter][] and [PHPRuntime][], you might want only a subset of the standard PHP library.\nYou can include PHPCore and then only expose the builtin functions, classes or constants you need.\n\n```javascript\nvar phpCore = require('phpcore');\n\nphpCore.install({\n    functionGroups: [\n        function (internals) {\n            return {\n                'add_one_to': function (argReference) {\n                    return internals.valueFactory.createInteger(argReference.getNative() + 1);\n                }\n            };\n        }\n    ],\n    classes: {\n        'TwentyOne': function () {\n            function TwentyOne() {}\n\n            TwentyOne.prototype.getIt = function () {\n                return 21;\n            };\n\n            return TwentyOne;\n        }\n    },\n    constantGroups: [\n        function (internals) {\n            return {\n                'MY_CONSTANT': 1000\n            };\n        }\n    ]\n});\n\nphpCore.compile(\n    // Example JS code transpiled from PHP by PHPToJS:\n    function (stdin, stdout, stderr, tools, namespace) {\n        var namespaceScope = tools.createNamespaceScope(namespace), namespaceResult, scope = tools.globalScope, currentClass = null;\n        return tools.valueFactory.createInteger(\n            namespaceScope.getConstant('MY_CONSTANT').getNative() +\n            namespaceScope.getFunction('add_one_to')(tools.valueFactory.createInteger(21)).getNative()\n        );\n    }\n)().execute().then(function (result) {\n    console.log(result.unwrapForJS()); // Prints \"1022\"\n});\n```\n\nKeeping up to date\n------------------\n- [Follow me on Twitter](https://twitter.com/@asmblah) for updates: [https://twitter.com/@asmblah](https://twitter.com/@asmblah)\n\n[Uniter]: https://github.com/asmblah/uniter\n[PHPRuntime]: https://github.com/uniter/phpruntime\n",
  "readmeFilename": "README.md",
  "_id": "phpcore@1.4.3",
  "dist": {
    "shasum": "096e7e43ea6cef3c0690cc29bc8820e08e22403a"
  },
  "_from": "phpcore@~1",
  "_resolved": "https://registry.npmjs.org/phpcore/-/phpcore-1.4.3.tgz"
}
