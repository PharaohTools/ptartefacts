<?php

$jQuery('#create_new_key')->on('click', function() use ($jQuery)  {
    $jQuery('#create_new_key_fields')->fadeIn();
    $jQuery('#create_new_key')->fadeOut();
});

$console->log('before Key Start') ;

$jQuery('#save_new_key')->on('click', function() use ($jQuery, $console)  {
    $jQuery('.create_new_key_field')->fadeOut('fast') ;
    $jQuery('.loading_keys')->fadeIn('fast') ;
    createNewSSHKey($jQuery, $console) ;

});

function createNewSSHKey($jQuery, $console) {

    $console->log('Create Key Start') ;

    if ($jQuery('#new_ssh_key_title')->val() == '') {
        $jQuery('#new_ssh_key_title_alert')->html('Please enter an SSH Key Title');
        $jQuery('#new_ssh_key_title')->focus();
        return; }

    $console->log('Create Key ssh title') ;

    if ($jQuery('#new_ssh_key')->val() == '') {
        $jQuery('#new_ssh_key_alert')->html('Please enter a Public SSH Key');
        $jQuery('#new_ssh_key')->focus();
        return; }

    $console->log('Create Key pubkey') ;

    $handler = new handler() ;
    $ajax_object = getJsonData($jQuery) ;
    $ajax_object->done(
        function ($data) use ($handler, $jQuery) {
            $handler->handleData($data) ;
            $jQuery('.create_new_key_field')->fadeIn('fast') ;
            $jQuery('.loading_keys')->fadeOut('fast') ;
            $kt = new keyTable() ;
            $kt->rewriteTable($data) ;
        }
    );

//    $console->log($json_data) ;

    //  getPublicKeyFingerprint(string $algorithm = 'md5')
}

function getJsonData($jQuery) {

    $rurl = 'index.php?control=UserSSHKey&action=create&output-format=JSON' ;
    $data = new StdClass() ;
    $key = $jQuery('#new_ssh_key')->val() ;
    $title = $jQuery('#new_ssh_key_title')->val() ;
    $data["ssh_public_key"] = $key;

    $new_data_string = "new_ssh_key=".$key.'&' ;
    $new_data_string = $new_data_string."new_ssh_key_title=".$title ;
    $new_data_string = \js_core::$window->encodeURI($new_data_string) ;

    $data = array(
        'type' => 'POST',
        'url' => $rurl,
        'dataType'=> "json",
        'data' => $new_data_string
    ) ;

    $ajax_object = $jQuery->ajax($data);
    return $ajax_object ;
}

class handler {

    public function handleData($data) {
        \js_core::$window->alert($data);
        //do some stuff
    }
}

class keyTable {

    public function rewriteTable($data) {
        $ht = '' ;
        $i = 1;

        foreach ($data['public_ssh_keys'] as $public_ssh_key) {
            $ht .= '<div class="public_ssh_key_row" id="'
                .$public_ssh_key['key_hash'].'">' ;
            $ht .= '  <div class="blCell cellRowIndex" scope="row">'.$i.'</div> ' ;
            $ht .= '  <div class="blCell cellRowKeyDetails">' ;
            $ht .= '    <div class="fullRow">' ;
            $ht .= '        '.$public_ssh_key['title'] ;
            $ht .= '    </div>' ;
            $ht .= '    <div class="fullRow">' ;
            $ht .= '        '.$public_ssh_key['fingerprint'] ;
            $ht .= '    </div>' ;
            $ht .= '    <div class="fullRow">' ;
            $ht .= '        Key Creation Data â€” Last used within the last 4 days' ;
            $ht .= '    </div>' ;
            $ht .= '  </div>' ;
            $ht .= '  <div class="blCell cellRowDeleteKey">' ;
            $ht .= '    <btn class="btn btn-warning">Delete</btn>' ;
            $ht .= '  </div>' ;
            $ht .= '</div>' ;
            $i++ ; }

        $jq = \js_core::$jQuery ;
        $jq('.allSSHKeyRows')->html($ht) ;
    }
}